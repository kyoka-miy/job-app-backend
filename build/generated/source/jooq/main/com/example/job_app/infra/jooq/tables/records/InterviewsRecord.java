/*
 * This file is generated by jOOQ.
 */
package com.example.job_app.infra.jooq.tables.records;


import com.example.job_app.infra.jooq.tables.Interviews;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InterviewsRecord extends UpdatableRecordImpl<InterviewsRecord> implements Record8<String, LocalDateTime, String, String, String, Boolean, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>job_app.interviews.interview_id</code>.
     */
    public void setInterviewId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>job_app.interviews.interview_id</code>.
     */
    public String getInterviewId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>job_app.interviews.interview_datetime</code>.
     */
    public void setInterviewDatetime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>job_app.interviews.interview_datetime</code>.
     */
    public LocalDateTime getInterviewDatetime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>job_app.interviews.stage</code>.
     */
    public void setStage(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>job_app.interviews.stage</code>.
     */
    public String getStage() {
        return (String) get(2);
    }

    /**
     * Setter for <code>job_app.interviews.type</code>.
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>job_app.interviews.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>job_app.interviews.note</code>.
     */
    public void setNote(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>job_app.interviews.note</code>.
     */
    public String getNote() {
        return (String) get(4);
    }

    /**
     * Setter for <code>job_app.interviews.active</code>.
     */
    public void setActive(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>job_app.interviews.active</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>job_app.interviews.job_id</code>.
     */
    public void setJobId(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>job_app.interviews.job_id</code>.
     */
    public String getJobId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>job_app.interviews.activity_id</code>.
     */
    public void setActivityId(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>job_app.interviews.activity_id</code>.
     */
    public String getActivityId() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, LocalDateTime, String, String, String, Boolean, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, LocalDateTime, String, String, String, Boolean, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Interviews.INTERVIEWS.INTERVIEW_ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Interviews.INTERVIEWS.INTERVIEW_DATETIME;
    }

    @Override
    public Field<String> field3() {
        return Interviews.INTERVIEWS.STAGE;
    }

    @Override
    public Field<String> field4() {
        return Interviews.INTERVIEWS.TYPE;
    }

    @Override
    public Field<String> field5() {
        return Interviews.INTERVIEWS.NOTE;
    }

    @Override
    public Field<Boolean> field6() {
        return Interviews.INTERVIEWS.ACTIVE;
    }

    @Override
    public Field<String> field7() {
        return Interviews.INTERVIEWS.JOB_ID;
    }

    @Override
    public Field<String> field8() {
        return Interviews.INTERVIEWS.ACTIVITY_ID;
    }

    @Override
    public String component1() {
        return getInterviewId();
    }

    @Override
    public LocalDateTime component2() {
        return getInterviewDatetime();
    }

    @Override
    public String component3() {
        return getStage();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public String component5() {
        return getNote();
    }

    @Override
    public Boolean component6() {
        return getActive();
    }

    @Override
    public String component7() {
        return getJobId();
    }

    @Override
    public String component8() {
        return getActivityId();
    }

    @Override
    public String value1() {
        return getInterviewId();
    }

    @Override
    public LocalDateTime value2() {
        return getInterviewDatetime();
    }

    @Override
    public String value3() {
        return getStage();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public String value5() {
        return getNote();
    }

    @Override
    public Boolean value6() {
        return getActive();
    }

    @Override
    public String value7() {
        return getJobId();
    }

    @Override
    public String value8() {
        return getActivityId();
    }

    @Override
    public InterviewsRecord value1(String value) {
        setInterviewId(value);
        return this;
    }

    @Override
    public InterviewsRecord value2(LocalDateTime value) {
        setInterviewDatetime(value);
        return this;
    }

    @Override
    public InterviewsRecord value3(String value) {
        setStage(value);
        return this;
    }

    @Override
    public InterviewsRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public InterviewsRecord value5(String value) {
        setNote(value);
        return this;
    }

    @Override
    public InterviewsRecord value6(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public InterviewsRecord value7(String value) {
        setJobId(value);
        return this;
    }

    @Override
    public InterviewsRecord value8(String value) {
        setActivityId(value);
        return this;
    }

    @Override
    public InterviewsRecord values(String value1, LocalDateTime value2, String value3, String value4, String value5, Boolean value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InterviewsRecord
     */
    public InterviewsRecord() {
        super(Interviews.INTERVIEWS);
    }

    /**
     * Create a detached, initialised InterviewsRecord
     */
    public InterviewsRecord(String interviewId, LocalDateTime interviewDatetime, String stage, String type, String note, Boolean active, String jobId, String activityId) {
        super(Interviews.INTERVIEWS);

        setInterviewId(interviewId);
        setInterviewDatetime(interviewDatetime);
        setStage(stage);
        setType(type);
        setNote(note);
        setActive(active);
        setJobId(jobId);
        setActivityId(activityId);
    }
}
