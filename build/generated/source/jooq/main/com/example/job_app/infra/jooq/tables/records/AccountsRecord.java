/*
 * This file is generated by jOOQ.
 */
package com.example.job_app.infra.jooq.tables.records;


import com.example.job_app.infra.jooq.tables.Accounts;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountsRecord extends UpdatableRecordImpl<AccountsRecord> implements Record6<String, LocalDateTime, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>job_app.accounts.account_id</code>.
     */
    public void setAccountId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>job_app.accounts.account_id</code>.
     */
    public String getAccountId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>job_app.accounts.registered_datetime</code>.
     */
    public void setRegisteredDatetime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>job_app.accounts.registered_datetime</code>.
     */
    public LocalDateTime getRegisteredDatetime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>job_app.accounts.email</code>.
     */
    public void setEmail(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>job_app.accounts.email</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>job_app.accounts.password</code>.
     */
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>job_app.accounts.password</code>.
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>job_app.accounts.name</code>.
     */
    public void setName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>job_app.accounts.name</code>.
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>job_app.accounts.role</code>.
     */
    public void setRole(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>job_app.accounts.role</code>.
     */
    public String getRole() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, LocalDateTime, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, LocalDateTime, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Accounts.ACCOUNTS.ACCOUNT_ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Accounts.ACCOUNTS.REGISTERED_DATETIME;
    }

    @Override
    public Field<String> field3() {
        return Accounts.ACCOUNTS.EMAIL;
    }

    @Override
    public Field<String> field4() {
        return Accounts.ACCOUNTS.PASSWORD;
    }

    @Override
    public Field<String> field5() {
        return Accounts.ACCOUNTS.NAME;
    }

    @Override
    public Field<String> field6() {
        return Accounts.ACCOUNTS.ROLE;
    }

    @Override
    public String component1() {
        return getAccountId();
    }

    @Override
    public LocalDateTime component2() {
        return getRegisteredDatetime();
    }

    @Override
    public String component3() {
        return getEmail();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public String component5() {
        return getName();
    }

    @Override
    public String component6() {
        return getRole();
    }

    @Override
    public String value1() {
        return getAccountId();
    }

    @Override
    public LocalDateTime value2() {
        return getRegisteredDatetime();
    }

    @Override
    public String value3() {
        return getEmail();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public String value5() {
        return getName();
    }

    @Override
    public String value6() {
        return getRole();
    }

    @Override
    public AccountsRecord value1(String value) {
        setAccountId(value);
        return this;
    }

    @Override
    public AccountsRecord value2(LocalDateTime value) {
        setRegisteredDatetime(value);
        return this;
    }

    @Override
    public AccountsRecord value3(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public AccountsRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public AccountsRecord value5(String value) {
        setName(value);
        return this;
    }

    @Override
    public AccountsRecord value6(String value) {
        setRole(value);
        return this;
    }

    @Override
    public AccountsRecord values(String value1, LocalDateTime value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountsRecord
     */
    public AccountsRecord() {
        super(Accounts.ACCOUNTS);
    }

    /**
     * Create a detached, initialised AccountsRecord
     */
    public AccountsRecord(String accountId, LocalDateTime registeredDatetime, String email, String password, String name, String role) {
        super(Accounts.ACCOUNTS);

        setAccountId(accountId);
        setRegisteredDatetime(registeredDatetime);
        setEmail(email);
        setPassword(password);
        setName(name);
        setRole(role);
    }
}
